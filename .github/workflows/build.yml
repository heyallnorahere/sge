name: build
on: [ push ]
jobs:
  build:
    runs-on: ${{ matrix.os-name }}
    strategy:
      matrix:
        os-name: [ ubuntu-latest, windows-2022, macos-latest ]
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.x
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: install dependencies (ubuntu)
        if: ${{ matrix.os-name == 'ubuntu-latest' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y mesa-common-dev libxrandr-dev libxinerama-dev \
            libxcursor-dev libxi-dev cmake
      - name: build dotnet (ubuntu)
        if: ${{ matrix.os-name == 'ubuntu-latest' }}
        shell: bash
        run: |
          echo Compiling .NET 6 native runtime due to glibc conflicts
          git clone --no-checkout https://github.com/dotnet/runtime.git dotnet-runtime
          cd dotnet-runtime
          git checkout v6.0.1
          dotnet build src/mono/mono.proj -c Release
          cp -f artifacts/obj/mono/Linux.x64.Release/out/lib/libcoreclr.so ../vendor/mono/lib/linux/
          cp -f artifacts/obj/mono/Linux.x64.Release/out/lib/libmonosgen-2.0.a ../vendor/mono/lib/linux/
          cd ..
          rm -rf dotnet-runtime
      - name: install dependencies (macos)
        if: ${{ matrix.os-name == 'macos-latest' }}
        shell: bash
        run: |
          brew install cmake
      - name: install global dependencies
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          dotnet restore "setup/Setup.sln"
          dotnet build -c Release "setup/Setup.sln"
          dotnet "setup/SGE.Setup/bin/Release/net6.0/SGE.Setup.dll" -t setup-ci
      - name: build
        shell: bash
        run: |
          dotnet restore SGECore.sln
          cmake --preset default -DCMAKE_BUILD_TYPE=Release
          cmake --build --preset default