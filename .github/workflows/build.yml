name: build
on: [ push ]
jobs:
  build:
    runs-on: ${{ matrix.os-name }}-latest
    strategy:
      matrix:
        os-name: [ ubuntu, windows, macos ]
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.x
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: install dependencies (ubuntu)
        if: ${{ matrix.os-name == 'ubuntu' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y mesa-common-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev cmake libvulkan-dev
      - name: install dependencies (macos)
        if: ${{ matrix.os-name == 'macos' }}
        shell: bash
        run: |
          brew install cmake
      - name: install vulkan (windows and macos)
        if: ${{ matrix.os-name == 'windows' || matrix.os-name == 'macos' }}
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          dotnet restore "setup/Setup.sln"
          dotnet build -c Release "setup/Setup.sln"
          dotnet "setup/SGE.Setup/bin/Release/net6.0/SGE.Setup.dll" -t install-vulkan --ci
      - name: build
        shell: bash
        run: |
          cmake --preset default -DCMAKE_BUILD_TYPE=Release
          cmake --build --preset default